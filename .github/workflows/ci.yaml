name: CI

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

env:
    TURBO_TELEMETRY_DISABLED: 1

jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5

            - name: Pre-install yarn
              run: npm install -g yarn

            - name: Install turbo
              run: npm install -g turbo

            - name: Setup Node
              uses: actions/setup-node@v6
              with:
                  node-version: 22.x
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Cache Turbo
              uses: actions/cache@v4
              with:
                  path: .turbo
                  key: ${{ runner.os }}-turbo-${{ hashFiles('**/*.ts') }}
                  restore-keys: |
                      ${{ runner.os }}-turbo-

            - name: Run lint
              run: turbo run lint --cache-dir=".turbo"

    # build:
    #     name: Build
    #     runs-on: ubuntu-latest

    #     steps:
    #         - uses: actions/checkout@v5

    #         - name: Pre-install yarn
    #           run: npm install -g yarn

    #         - name: Install turbo
    #           run: npm install -g turbo

    #         - name: Setup Node
    #           uses: actions/setup-node@v6
    #           with:
    #               node-version: 22.x
    #               cache: 'yarn'

    #         - name: Install dependencies
    #           run: yarn install --frozen-lockfile

    #         - name: Cache Turbo
    #           uses: actions/cache@v4
    #           with:
    #               path: .turbo
    #               key: ${{ runner.os }}-turbo-${{ hashFiles('**/*.ts') }}
    #               restore-keys: |
    #                   ${{ runner.os }}-turbo-

    #         - name: Run build
    #           run: turbo run build --cache-dir=".turbo"

    test:
        name: Test (Node ${{ matrix.node-version }})
        runs-on: ubuntu-latest
        # needs: build

        strategy:
            matrix:
                node-version: [20.x, 22.x, 24.x]

        steps:
            - uses: actions/checkout@v5

            - name: Pre-install yarn
              run: npm install -g yarn

            - name: Install turbo
              run: npm install -g turbo

            - name: Setup Node
              uses: actions/setup-node@v6
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Cache Turbo
              uses: actions/cache@v4
              with:
                  path: .turbo
                  key: ${{ runner.os }}-turbo-${{ hashFiles('**/*.ts') }}
                  restore-keys: |
                      ${{ runner.os }}-turbo-

            - name: Run tests
              run: turbo run test --cache-dir=".turbo"

    # coverage:
    #     name: Coverage
    #     runs-on: ubuntu-latest
    #     needs: build

    #     steps:
    #         - uses: actions/checkout@v5

    #         - name: Pre-install yarn
    #           run: npm install -g yarn

    #         - name: Install turbo
    #           run: npm install -g turbo

    #         - name: Setup Node
    #           uses: actions/setup-node@v6
    #           with:
    #               node-version: 22.x
    #               cache: 'yarn'

    #         - name: Install dependencies
    #           run: yarn install --frozen-lockfile

    #         - name: Cache Turbo
    #           uses: actions/cache@v4
    #           with:
    #               path: .turbo
    #               key: ${{ runner.os }}-turbo-${{ hashFiles('**/*.ts') }}
    #               restore-keys: |
    #                   ${{ runner.os }}-turbo-

    #         - name: Run coverage
    #           run: turbo run coverage --cache-dir=".turbo"

    #         - name: Upload coverage report
    #           uses: actions/upload-artifact@v4
    #           with:
    #               name: coverage-report
    #               path: coverage/
